{"version":3,"sources":["Images/profile-pic.jpg","Component/NavBar/index.js","Component/Wrapper/index.js","Pages/AboutMe/index.js","Pages/Contact/index.js","Component/ProjectInfo/projectInfo.component.jsx","Component/Directory/directory.component.jsx","Pages/Portfolio/portfolio.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","expand","Brand","component","Link","href","Toggle","aria-controls","Collapse","id","Nav","className","Wrapper","props","Container","fluid","Row","Card","Header","title","Body","children","AboutMe","state","photo","Image","src","image","Col","sm","md","lg","this","text","Component","styles","linkedinIcon","fontSize","margin","color","githubIcon","mailIcon","Contact","style","ProejctInfo","project","name","summary","tools","projectLink","gitLink","Directory","data","map","index","key","Portfolio","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,yC,yoHCwB5BC,G,YAlBA,kBACb,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACb,kBAACD,EAAA,EAAOE,MAAR,CAAcC,UAAWC,IAAMC,KAAK,KAApC,gBAGA,kBAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIN,KAAL,CAAUC,KAAK,KAAf,YACA,kBAACK,EAAA,EAAIN,KAAL,CAAUC,KAAK,cAAf,aACA,kBAACK,EAAA,EAAIN,KAAL,CAAUC,KAAK,YAAf,iB,gECAKO,G,MAbC,SAACC,GAAD,OACd,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAKL,UAAU,6BACb,kBAACM,EAAA,EAAD,CAAMN,UAAU,eACd,kBAACM,EAAA,EAAKC,OAAN,CAAaP,UAAU,WAAWE,EAAMM,OACxC,kBAACF,EAAA,EAAKG,KAAN,CAAWT,UAAU,aAAaE,EAAMQ,gB,yCCoCnCC,E,2MAvCbC,MAAQ,CACNC,MAAO,I,wEAIP,IAAMA,EAAQ,kBAACC,EAAA,EAAD,CAAOd,UAAU,QAAQe,IAAKC,IAAOZ,OAAK,IAExD,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAASI,MAAO,YACd,kBAACL,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACY,EAAA,EAAD,CAAKjB,UAAU,WAAWkB,GAAI,OAAQC,GAAI,EAAGC,GAAI,GAC9CP,GAEH,kBAACI,EAAA,EAAD,CAAKC,GAAI,OAAQC,GAAI,EAAGC,GAAI,EAAGpB,UAAU,QAEpCqB,KAAKC,KAAL,8iC,GAlBGC,a,mDCChBC,G,MAAS,CACbC,aAAc,CACZC,SAAU,GACVC,OAAQ,GACRC,MAAO,UAETC,WAAY,CACVH,SAAU,GACVC,OAAQ,GACRC,MAAO,UAETE,SAAU,CACRJ,SAAU,GACVC,OAAQ,GACRC,MAAO,YA0BIG,EAtBC,kBACd,kBAAC,WAAD,KACE,kBAAC,EAAD,CAASvB,MAAM,uBACb,6BACE,yBAAKR,UAAU,SAAf,iBACgB,uBAAGN,KAAK,oBAAR,mBAEhB,6BACA,uBAAGA,KAAM,8BACP,kBAAC,IAAD,CAAWkC,MAAM,UAAUI,MAAOR,EAAOM,YAE3C,uBAAGpC,KAAK,wCACN,kBAAC,IAAD,CAAcsC,MAAOR,EAAOC,gBAE9B,uBAAG/B,KAAK,8BACN,kBAAC,IAAD,CAAYsC,MAAOR,EAAOK,kB,gBCArBI,G,MArCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,yBAAKlC,UAAU,WACb,wBAAIA,UAAU,SAASkC,EAAQC,MAC/B,yBAAKnC,UAAU,QACb,6BACGkC,EAAQE,QACP,2BACE,0BAAMpC,UAAU,WAAhB,YACA,6BACCkC,EAAQE,SAGX,IAGJ,6BACGF,EAAQG,MACP,2BACE,0BAAMrC,UAAU,WAAhB,gBADF,IACgD,6BAC7CkC,EAAQG,OAGX,IAGJ,yBAAKrC,UAAU,cACb,uBAAGA,UAAU,cAAcN,KAAMwC,EAAQI,aAAzC,eAGA,uBAAGtC,UAAU,UAAUN,KAAMwC,EAAQK,SAArC,oBCJOC,G,iNAtBb5B,MAAQ,CACN6B,KAAMA,G,wEAGE,IACAA,EAASpB,KAAKT,MAAd6B,KACR,OACE,yBAAKzC,UAAU,aACZyC,EAAKC,KAAI,SAACR,EAASS,GAAV,OACR,yBACEC,IAAKD,EACL3C,UAAU,gBAGV,kBAAC,EAAD,CAAakC,QAASA,a,GAfVX,cCQTsB,EARG,kBAChB,6BACE,kBAAC,EAAD,CAASrC,MAAO,aACd,kBAAC,EAAD,CAAWR,UAAU,YCWZ8C,G,MAXH,kBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIxD,UAAWmB,IACjC,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,WAAWxD,UAAWuC,IACxC,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,aAAaxD,UAAWqD,QCF5BI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bf50ff47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic.2c99ae5c.jpg\";","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./style.css\";\n\nconst NavBar = () => (\n  <Fragment>\n    <Navbar expand=\"lg\">\n      <Navbar.Brand component={Link} href=\"/\">\n        Kin Kam Zhao\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">About Me</Nav.Link>\n          <Nav.Link href=\"/portfolio\">Portfolio</Nav.Link>\n          <Nav.Link href=\"/contact\">Contact</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </Fragment>\n);\n\nexport default NavBar;\n","import React, { Component, Fragment } from \"react\";\nimport { Card, Container, Row } from \"react-bootstrap\";\nimport \"./style.css\";\n\nconst Wrapper = (props) => (\n  <Fragment>\n    <Container fluid>\n      <Row className=\"justify-content-md-center\">\n        <Card className=\"text-center\">\n          <Card.Header className=\"heading\">{props.title}</Card.Header>\n          <Card.Body className=\"card-body\">{props.children}</Card.Body>\n        </Card>\n      </Row>\n    </Container>\n  </Fragment>\n);\n\nexport default Wrapper;\n","import React, { Component, Fragment } from \"react\";\nimport Wrapper from \"../../Component/Wrapper\";\nimport { Container, Row, Image, Col, Card } from \"react-bootstrap\";\nimport \"./style.css\";\nimport image from \"../../Images/profile-pic.jpg\";\n\nclass AboutMe extends Component {\n  state = {\n    photo: \"\"\n  };\n\n  render() {\n    const photo = <Image className=\"image\" src={image} fluid />;\n\n    return (\n      <Fragment>\n        <Wrapper title={\"About Me\"}>\n          <Container>\n            <Row>\n              <Col className=\"position\" sm={\"auto\"} md={3} lg={3}>\n                {photo}\n              </Col>\n              <Col sm={\"auto\"} md={8} lg={8} className=\"text\">\n                {\n                  (this.text = `\n                    My name is Kin Kam Zhao but everyone call me Kam.  I am a Full Stack Software Engineer\n                    leveraging a background in the service industry to create meaningful web applications.  \n                    Graudated with a bachelor degree majoring in finance.  Earned a certificate in \n                    Full Stack Development from Rutgers University, with newly developed skills \n                    in React.js, JavaScript, HTML, CSS, and node.js.  A versatile problem solver.  \n                    In a recent project I created an app that will help managers keep track of their employees\n                    data and help schedule the employees shifts.  Positioned well to provide unique perspectives \n                    on how end-users interact with websites and software platforms by leveraging my background \n                    in the service industry and finance.  I am interested in web development, artificial intelligence, \n                    machine learning, and data science.\n                    `)\n                }\n              </Col>\n            </Row>\n          </Container>\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default AboutMe;\n","import React, { Component, Fragment } from \"react\";\nimport Wrapper from \"../../Component/Wrapper\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport \"./style.css\";\n\nconst styles = {\n  linkedinIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: \"2477B5\"\n  },\n  githubIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: \"23292D\"\n  },\n  mailIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: \"1878D4\"\n  }\n};\n\nconst Contact = () => (\n  <Fragment>\n    <Wrapper title=\"Contact Information\">\n      <div>\n        <div className=\"phone\">\n          Phone Number: <a href=\"tel:862-208-2672\">(862)-208-2672</a>\n        </div>\n        <br></br>\n        <a href={\"mailto:\" + \"kamzh1988@gmail.com\"}>\n          <EmailIcon color=\"inherit\" style={styles.mailIcon} />\n        </a>\n        <a href=\"https://www.linkedin.com/in/kinzhao/\">\n          <LinkedInIcon style={styles.linkedinIcon} />\n        </a>\n        <a href=\"https://github.com/kamzh88\">\n          <GitHubIcon style={styles.githubIcon} />\n        </a>\n      </div>\n    </Wrapper>\n  </Fragment>\n);\n\nexport default Contact;\n","import React, { Component, Fragment } from \"react\";\nimport \"./projectInfo.styles.scss\";\n\nconst ProejctInfo = ({ project }) => (\n  <div className=\"content\">\n    <h1 className=\"title\">{project.name}</h1>\n    <div className=\"grid\">\n      <div>\n        {project.summary ? (\n          <p>\n            <span className=\"heading\">Summary:</span>\n            <br></br>\n            {project.summary}\n          </p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div>\n        {project.tools ? (\n          <p>\n            <span className=\"heading\">Tools Used: </span> <br></br>\n            {project.tools}\n          </p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"projectUrl\">\n        <a className=\"projectLink\" href={project.projectLink}>\n          See Project\n        </a>\n        <a className=\"gitLink\" href={project.gitLink}>\n          Github Link\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ProejctInfo;","import React, { Component } from \"react\";\nimport data from \"../../Images/data.json\";\nimport ProjectInfo from \"../ProjectInfo/projectInfo.component\";\nimport './directory.styles.scss';\n\nclass Directory extends Component {\n  state = {\n    data: data\n  };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"card-info\">\n        {data.map((project, index) => (\n          <div\n            key={index}\n            className=\"project-item\"\n            // style={{ backgroundColor: `rgba(255, 255, 255, 0.55)` }}\n          >\n            <ProjectInfo project={project} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Directory;\n","import React from \"react\";\nimport Wrapper from \"../../Component/Wrapper\";\nimport \"./portfolio.styles.scss\";\nimport Directory from \"../../Component/Directory/directory.component\";\n\nconst Portfolio = () => (\n  <div>\n    <Wrapper title={\"Portfolio\"}>\n      <Directory className=\"card\" />\n    </Wrapper>\n  </div>\n);\n\nexport default Portfolio;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./Component/NavBar\";\nimport AboutMe from \"./Pages/AboutMe\";\nimport Contact from \"./Pages/Contact\";\nimport Portfolio from \"./Pages/Portfolio/portfolio.component\";\nimport \"./App.css\";\n\nconst App = () => (\n  <Router>\n    <NavBar />\n    <Switch>\n      <Route exact path=\"/\" component={AboutMe} />\n      <Route exact path=\"/contact\" component={Contact} />\n      <Route exact path=\"/portfolio\" component={Portfolio} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}