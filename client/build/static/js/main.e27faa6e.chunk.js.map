{"version":3,"sources":["Images/profile-pic.jpg","Component/NavBar/index.js","Component/Wrapper/index.js","Pages/AboutMe/index.js","Pages/Contact/index.js","Pages/Portfolio/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","Brand","Nav","variant","defaultActiveKey","Item","Link","component","href","eventKey","Component","styles","heading","fontWeight","fontSize","Wrapper","Container","fluid","Row","className","Card","Header","style","Body","this","props","children","image","maxHeight","text","textAlign","title","padding","AboutMe","state","photo","Image","src","Col","lg","sm","md","marginBottom","form","display","flexDirection","maxWidth","margin","spacing","linkedinIcon","color","githubIcon","mailIcon","Contact","name","email","message","handleChange","key","e","setState","target","value","Typography","card","backgroundColor","width","Portfolio","data","map","project","index","summary","tools","url","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e27faa6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic.a87d4194.jpg\";","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\n\nclass NavBar extends Component {\n\n  render() {\n\n    return (\n\n      <Fragment>\n        <Navbar>\n          <Navbar.Brand>Kin Kam Zhao</Navbar.Brand>\n          <Nav variant=\"tabs\" defaultActiveKey=\"Home\">\n            <Nav.Item>\n              <Nav.Link component={Link} href=\"/\">About Me</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"portfolio\" component={Link} href=\"/portfolio\">Portfolio</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"contact\" component={Link} href=\"/contact\">Contact</Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default NavBar;","import React, { Component, Fragment } from \"react\";\nimport { Card, Container, Row } from \"react-bootstrap\";\nimport \"./style.css\";\n\nconst styles = {\n  heading: {\n    fontWeight: 900,\n    fontSize: \"2rem\"\n  }\n};\n\nclass Wrapper extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Container fluid>\n          <Row className=\"justify-content-md-center\">\n            <Card className=\"text-center\">\n              <Card.Header style={styles.heading}>Kin Kam Zhao</Card.Header>\n              <Card.Body>{this.props.children}</Card.Body>\n            </Card>\n          </Row>\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default Wrapper;\n","import React, { Component, Fragment } from 'react';\nimport Wrapper from '../../Component/Wrapper';\nimport { Container, Row, Image, Col, Card } from 'react-bootstrap';\nimport './style.css';\nimport image from '../../Images/profile-pic.jpg';\n\nconst styles = {\n  image: {\n    maxHeight: '15rem',\n  },\n  text: {\n    textAlign: 'left',\n    fontWeight: 700,\n  },\n  title: {\n    textAlign: 'center',\n    fontWeight: 750,\n    padding: '1rem'\n  }\n}\n\nclass AboutMe extends Component {\n\n  state = {\n    photo: ''\n  }\n\n  render() {\n\n    this.state.photo = <Image style={styles.image} src={image} fluid />;\n\n    return (\n      <Fragment>\n        <Wrapper\n        >\n          <Container>\n            <Row>\n              <Col lg={12}>\n                <h3 style={styles.title}>About Me</h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col sm={'auto'} md={3} lg={3}>\n                {this.state.photo}\n              </Col>\n              <Col sm={'auto'} md={8} lg={8} style={styles.text}>\n                {this.text = `\n                    My name is Kin Kam Zhao but everyone call me Kam. I am a full Stack Web Developer \n                    leveraging a background in the service industry to create meaningful web applications.  \n                    Graudate with a bachelor degree majoring in finance.  Earned a certificate in \n                    Full Stack Development from Rutgers University, with newly developed skills \n                    in JavaScript, HTML, CSS, node.js, and React.js.  A versatile problem solver.  \n                    In a recent project I created an app that will help managers keep track of their employees\n                    data and help schedule the employees shifts.  Positioned well to provide unique perspectives \n                    on how end-users interact with websites and software platforms by leveraging my background \n                    in the service industry and finance.\n                    `}\n              </Col>\n            </Row>\n          </Container>\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default AboutMe;","import React, { Component, Fragment } from \"react\";\nimport Wrapper from \"../../Component/Wrapper\";\nimport { TextField, Typography, Button, Grid } from \"@material-ui/core/\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport \"./style.css\";\n\nconst styles = {\n  text: {\n    marginBottom: 10\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxWidth: 400,\n    margin: \"auto\",\n    padding: 16\n  },\n  spacing: {\n    padding: \"0.5rem\"\n  },\n  linkedinIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: \"2477B5\"\n  },\n  githubIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: \"23292D\"\n  },\n  mailIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: '1878D4'\n  }\n};\n\nclass Contact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  };\n\n  handleChange = key => e => {\n    this.setState({ [key]: e.target.value });\n  };\n\n  render() {\n    // const { name, email, message } = this.state;\n\n    return (\n      <Fragment>\n        <Wrapper>\n          <Typography variant=\"h6\">Contact Infomation:</Typography>\n          <br></br>\n\n          <div>\n            <h7>\n              Phone Number: <a href=\"tel:862-208-2672\">(862)-208-2672</a>\n            </h7>\n            <br></br>\n            <h7 style={styles.spacing}>\n              <a href={\"mailto:\" + \"kamzh1988@gmail.com\"}>\n                <EmailIcon color=\"inherit\" style={styles.mailIcon} />\n              </a>\n            </h7>\n            <h7 style={styles.spacing}>\n              <a href=\"https://www.linkedin.com/in/kinzhao/\">\n                <LinkedInIcon style={styles.linkedinIcon} />\n              </a>\n            </h7>\n            <h7 style={styles.spacing}>\n              <a href=\"https://github.com/kamzh88\">\n                <GitHubIcon style={styles.githubIcon} />\n              </a>\n            </h7>\n          </div>\n\n          {/* <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\">\n                Contact Me\n              </Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <Typography variant=\"h6\">\n                Contact Infomation:\n              </Typography>\n              <div>\n                <h7>Phone: (862)208-2672 </h7><br></br>\n                <h7>Email: kamzh1988@gmail.com</h7><br></br>\n                <h7>LinkedIn: </h7><br></br>\n                <h7>Github: </h7><br></br>\n              </div>\n            </Grid>\n            <Grid item xs={7}>\n              <form\n                style={styles.form}\n                onSubmit={this.onSubmit}\n                xs={6}\n              >\n                <TextField\n                  style={styles.text}\n                  variant={\"outlined\"}\n                  required\n                  type={\"text\"}\n                  label={\"Name\"}\n                  value={name}\n                  onChange={this.handleChange(\"name\")}\n                />\n                <TextField\n                  style={styles.text}\n                  variant={\"outlined\"}\n                  required\n                  type={\"email\"}\n                  label={\"Email\"}\n                  value={email}\n                  onChange={this.handleChange(\"email\")}\n                />\n                <TextField\n                  style={styles.text}\n                  required\n                  id=\"outlined-multiline-static\"\n                  label=\"Message\"\n                  multiline\n                  rows=\"4\"\n                  value={message}\n                  variant=\"outlined\"\n                />\n                <Button\n                  type={\"submit\"}\n                  fullWidth\n                  variant={\"contained\"}\n                  color={\"primary\"}\n                >\n                  Send\n            </Button>\n              </form>\n            </Grid>\n          </Grid> */}\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component, Fragment } from \"react\";\nimport Wrapper from \"../../Component/Wrapper\";\nimport data from \"../../Images/data.json\";\nimport { Typography, Card } from \"@material-ui/core/\";\nimport \"./style.css\";\n\nconst styles = {\n  card: {\n    backgroundColor: `rgba(255, 255, 255, 0.55)`,\n    width: \"auto\",\n    margin: 5,\n    textAlign: \"justify\",\n    padding: \"1rem\"\n  },\n  text: {\n    fontWeight: \"bold\"\n  },\n  heading: {\n    fontWeight: \"bold\"\n  }\n};\n\nclass Portfolio extends Component {\n  state = {\n    data: data\n  };\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <Fragment>\n        <Wrapper>\n          <Typography variant=\"h6\">Portfolio</Typography>\n\n          {data.map((project, index) => (\n            <Card key={index} style={styles.card}>\n              <div style={styles.heading}>{project.name}</div>\n              <br></br>\n              <div>\n                {project.summary ? (\n                  <p>\n                    <span style={styles.text}>Summary:</span><br></br>\n                    {project.summary}\n                  </p>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <div>\n                {project.tools ? (\n                  <p>\n                    <span style={styles.text}>Tools Used: </span> <br></br>\n                    {project.tools}\n                  </p>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              <div>\n                <a href={project.url}>See Project</a>\n              </div>\n            </Card>\n          ))}\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from './Component/NavBar';\nimport AboutMe from './Pages/AboutMe';\nimport Contact from './Pages/Contact';\nimport Portfolio from './Pages/Portfolio';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={AboutMe} />\n          <Route exact path='/contact' component={Contact} />\n          <Route exact path='/portfolio' component={Portfolio} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}