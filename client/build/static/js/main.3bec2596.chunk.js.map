{"version":3,"sources":["Images/profile-pic.jpg","Component/NavBar/index.js","Component/Wrapper/index.js","Pages/AboutMe/index.js","Pages/Contact/index.js","Component/ProjectInfo/projectInfo.component.jsx","Component/Directory/directory.component.jsx","Pages/Portfolio/portfolio.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","Brand","Nav","variant","defaultActiveKey","Item","Link","component","href","eventKey","Component","Wrapper","Container","fluid","Row","className","Card","Header","this","props","title","Body","children","AboutMe","state","photo","Image","src","image","Col","sm","md","lg","text","styles","linkedinIcon","fontSize","margin","color","githubIcon","mailIcon","Contact","name","email","message","handleChange","key","e","setState","target","value","style","ProejctInfo","project","summary","tools","projectLink","gitLink","Directory","data","map","index","backgroundColor","Portfolio","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,yC,8qHCmC5BC,G,6LA3BX,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAOC,MAAR,qBACA,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,iBAAiB,QACnC,kBAACF,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAII,KAAL,CAAUC,UAAWD,IAAME,KAAK,KAAhC,aAIF,kBAACN,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAII,KAAL,CAAUG,SAAS,YAAYF,UAAWD,IAAME,KAAK,cAArD,cAIF,kBAACN,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAII,KAAL,CAAUG,SAAS,UAAUF,UAAWD,IAAME,KAAK,YAAnD,mB,GAlBOE,c,wBCgBNC,G,uLAfX,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACC,EAAA,EAAD,CAAKC,UAAU,6BACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,eACd,kBAACC,EAAA,EAAKC,OAAN,CAAaF,UAAU,WAAWG,KAAKC,MAAMC,OAC7C,kBAACJ,EAAA,EAAKK,KAAN,KAAYH,KAAKC,MAAMG,kB,GATfZ,c,yCC0CPa,E,2MAvCbC,MAAQ,CACNC,MAAO,I,wEAIP,IAAMA,EAAQ,kBAACC,EAAA,EAAD,CAAOX,UAAU,QAAQY,IAAKC,IAAOf,OAAK,IAExD,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAASO,MAAO,YACd,kBAACR,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACe,EAAA,EAAD,CAAKd,UAAU,WAAWe,GAAI,OAAQC,GAAI,EAAGC,GAAI,GAC9CP,GAEH,kBAACI,EAAA,EAAD,CAAKC,GAAI,OAAQC,GAAI,EAAGC,GAAI,EAAGjB,UAAU,QAEpCG,KAAKe,KAAL,6iC,GAlBGvB,a,2DCEhBwB,G,MAAS,CAWbC,aAAc,CACZC,SAAU,GACVC,OAAQ,GACRC,MAAO,UAETC,WAAY,CACVH,SAAU,GACVC,OAAQ,GACRC,MAAO,UAETE,SAAU,CACRJ,SAAU,GACVC,OAAQ,GACRC,MAAO,YA+GIG,E,2MA1GbjB,MAAQ,CACNkB,KAAM,GACNC,MAAO,GACPC,QAAS,I,EAGXC,aAAe,SAAAC,GAAG,OAAI,SAAAC,GACpB,EAAKC,SAAL,eAAiBF,EAAMC,EAAEE,OAAOC,U,wEAMhC,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAS9B,MAAM,uBACb,6BACE,wBAAIL,UAAU,SAAd,iBACgB,uBAAGP,KAAK,oBAAR,mBAEhB,6BACA,4BACE,uBAAGA,KAAM,8BACP,kBAAC,IAAD,CAAW8B,MAAM,UAAUa,MAAOjB,EAAOM,aAG7C,4BACE,uBAAGhC,KAAK,wCACN,kBAAC,IAAD,CAAc2C,MAAOjB,EAAOC,iBAGhC,4BACE,uBAAG3B,KAAK,8BACN,kBAAC,IAAD,CAAY2C,MAAOjB,EAAOK,sB,GAlCpB7B,a,gBCIP0C,G,MArCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,yBAAKtC,UAAU,WACb,wBAAIA,UAAU,SAASsC,EAAQX,MAC/B,yBAAK3B,UAAU,QACb,6BACGsC,EAAQC,QACP,2BACE,0BAAMvC,UAAU,WAAhB,YACA,6BACCsC,EAAQC,SAGX,IAGJ,6BACGD,EAAQE,MACP,2BACE,0BAAMxC,UAAU,WAAhB,gBADF,IACgD,6BAC7CsC,EAAQE,OAGX,IAGJ,yBAAKxC,UAAU,cACb,uBAAGA,UAAU,cAAcP,KAAM6C,EAAQG,aAAzC,eAGA,uBAAGzC,UAAU,UAAUP,KAAM6C,EAAQI,SAArC,oBCJOC,G,iNAtBblC,MAAQ,CACNmC,KAAMA,G,wEAGE,IACAA,EAASzC,KAAKM,MAAdmC,KACR,OACE,6BACGA,EAAKC,KAAI,SAACP,EAASQ,GAAV,OACR,yBACEf,IAAKe,EACL9C,UAAU,eACVoC,MAAO,CAAEW,gBAAgB,8BAEzB,kBAAC,EAAD,CAAaT,QAASA,a,GAfV3C,cCQTqD,EARG,kBAChB,6BACE,kBAAC,EAAD,CAAS3C,MAAO,aACd,kBAAC,EAAD,SCgBS4C,G,uLAbX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI3D,UAAWgB,IACjC,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,WAAW3D,UAAWkC,IACxC,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,aAAa3D,UAAWwD,U,GATlCrD,cCIEyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMvC,c","file":"static/js/main.3bec2596.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic.a87d4194.jpg\";","import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./style.css\";\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Navbar>\n          <Navbar.Brand>Kin Kam Zhao</Navbar.Brand>\n          <Nav variant=\"tabs\" defaultActiveKey=\"Home\">\n            <Nav.Item>\n              <Nav.Link component={Link} href=\"/\">\n                About Me\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"portfolio\" component={Link} href=\"/portfolio\">\n                Portfolio\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"contact\" component={Link} href=\"/contact\">\n                Contact\n              </Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar>\n      </Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component, Fragment } from \"react\";\nimport { Card, Container, Row } from \"react-bootstrap\";\nimport \"./style.css\";\n\nclass Wrapper extends Component {\n  render() {\n\n    return (\n      <Fragment>\n        <Container fluid>\n          <Row className=\"justify-content-md-center\">\n            <Card className=\"text-center\">\n              <Card.Header className=\"heading\">{this.props.title}</Card.Header>\n              <Card.Body>{this.props.children}</Card.Body>\n            </Card>\n          </Row>\n        </Container>\n      </Fragment>\n    );\n  }\n}\n\nexport default Wrapper;\n","import React, { Component, Fragment } from \"react\";\nimport Wrapper from \"../../Component/Wrapper\";\nimport { Container, Row, Image, Col, Card } from \"react-bootstrap\";\nimport \"./style.css\";\nimport image from \"../../Images/profile-pic.jpg\";\n\nclass AboutMe extends Component {\n  state = {\n    photo: \"\"\n  };\n\n  render() {\n    const photo = <Image className=\"image\" src={image} fluid />;\n\n    return (\n      <Fragment>\n        <Wrapper title={\"About Me\"}>\n          <Container>\n            <Row>\n              <Col className=\"position\" sm={\"auto\"} md={3} lg={3}>\n                {photo}\n              </Col>\n              <Col sm={\"auto\"} md={8} lg={8} className=\"text\">\n                {\n                  (this.text = `\n                    My name is Kin Kam Zhao but everyone call me Kam.  I am a Full Stack Software Engineer\n                    leveraging a background in the service industry to create meaningful web applications.  \n                    Graudate with a bachelor degree majoring in finance.  Earned a certificate in \n                    Full Stack Development from Rutgers University, with newly developed skills \n                    in React.js, JavaScript, HTML, CSS, and node.js.  A versatile problem solver.  \n                    In a recent project I created an app that will help managers keep track of their employees\n                    data and help schedule the employees shifts.  Positioned well to provide unique perspectives \n                    on how end-users interact with websites and software platforms by leveraging my background \n                    in the service industry and finance.  I am interested in web development, artificial intelligence, \n                    machine learning, and data science.\n                    `)\n                }\n              </Col>\n            </Row>\n          </Container>\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default AboutMe;\n","import React, { Component, Fragment } from \"react\";\nimport Wrapper from \"../../Component/Wrapper\";\nimport { Typography } from \"@material-ui/core/\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport \"./style.css\";\n\nconst styles = {\n  // text: {\n  //   marginBottom: 10\n  // },\n  // form: {\n  //   display: \"flex\",\n  //   flexDirection: \"column\",\n  //   maxWidth: 400,\n  //   margin: \"auto\",\n  //   padding: 16\n  // },\n  linkedinIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: \"2477B5\"\n  },\n  githubIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: \"23292D\"\n  },\n  mailIcon: {\n    fontSize: 60,\n    margin: 20,\n    color: \"1878D4\"\n  }\n};\n\nclass Contact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  };\n\n  handleChange = key => e => {\n    this.setState({ [key]: e.target.value });\n  };\n\n  render() {\n    // const { name, email, message } = this.state;\n\n    return (\n      <Fragment>\n        <Wrapper title=\"Contact Information\">\n          <div>\n            <h7 className=\"phone\">\n              Phone Number: <a href=\"tel:862-208-2672\">(862)-208-2672</a>\n            </h7>\n            <br></br>\n            <h7>\n              <a href={\"mailto:\" + \"kamzh1988@gmail.com\"}>\n                <EmailIcon color=\"inherit\" style={styles.mailIcon} />\n              </a>\n            </h7>\n            <h7>\n              <a href=\"https://www.linkedin.com/in/kinzhao/\">\n                <LinkedInIcon style={styles.linkedinIcon} />\n              </a>\n            </h7>\n            <h7>\n              <a href=\"https://github.com/kamzh88\">\n                <GitHubIcon style={styles.githubIcon} />\n              </a>\n            </h7>\n          </div>\n\n          {/* <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\">\n                Contact Me\n              </Typography>\n            </Grid>\n            <Grid item xs={5}>\n              <Typography variant=\"h6\">\n                Contact Infomation:\n              </Typography>\n              <div>\n                <h7>Phone: (862)208-2672 </h7><br></br>\n                <h7>Email: kamzh1988@gmail.com</h7><br></br>\n                <h7>LinkedIn: </h7><br></br>\n                <h7>Github: </h7><br></br>\n              </div>\n            </Grid>\n            <Grid item xs={7}>\n              <form\n                style={styles.form}\n                onSubmit={this.onSubmit}\n                xs={6}\n              >\n                <TextField\n                  style={styles.text}\n                  variant={\"outlined\"}\n                  required\n                  type={\"text\"}\n                  label={\"Name\"}\n                  value={name}\n                  onChange={this.handleChange(\"name\")}\n                />\n                <TextField\n                  style={styles.text}\n                  variant={\"outlined\"}\n                  required\n                  type={\"email\"}\n                  label={\"Email\"}\n                  value={email}\n                  onChange={this.handleChange(\"email\")}\n                />\n                <TextField\n                  style={styles.text}\n                  required\n                  id=\"outlined-multiline-static\"\n                  label=\"Message\"\n                  multiline\n                  rows=\"4\"\n                  value={message}\n                  variant=\"outlined\"\n                />\n                <Button\n                  type={\"submit\"}\n                  fullWidth\n                  variant={\"contained\"}\n                  color={\"primary\"}\n                >\n                  Send\n            </Button>\n              </form>\n            </Grid>\n          </Grid> */}\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component, Fragment } from \"react\";\nimport \"./projectInfo.styles.scss\";\n\nconst ProejctInfo = ({ project }) => (\n  <div className=\"content\">\n    <h1 className=\"title\">{project.name}</h1>\n    <div className=\"grid\">\n      <div>\n        {project.summary ? (\n          <p>\n            <span className=\"heading\">Summary:</span>\n            <br></br>\n            {project.summary}\n          </p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div>\n        {project.tools ? (\n          <p>\n            <span className=\"heading\">Tools Used: </span> <br></br>\n            {project.tools}\n          </p>\n        ) : (\n          \"\"\n        )}\n      </div>\n      <div className=\"projectUrl\">\n        <a className=\"projectLink\" href={project.projectLink}>\n          See Project\n        </a>\n        <a className=\"gitLink\" href={project.gitLink}>\n          Github Link\n        </a>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ProejctInfo;","import React, { Component } from \"react\";\nimport data from \"../../Images/data.json\";\nimport ProjectInfo from \"../ProjectInfo/projectInfo.component\";\nimport './directory.styles.scss';\n\nclass Directory extends Component {\n  state = {\n    data: data\n  };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n        {data.map((project, index) => (\n          <div\n            key={index}\n            className=\"project-item\"\n            style={{ backgroundColor: `rgba(255, 255, 255, 0.55)` }}\n          >\n            <ProjectInfo project={project} />\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Directory;\n","import React from \"react\";\nimport Wrapper from \"../../Component/Wrapper\";\nimport \"./portfolio.styles.scss\";\nimport Directory from \"../../Component/Directory/directory.component\";\n\nconst Portfolio = () => (\n  <div>\n    <Wrapper title={\"Portfolio\"}>\n      <Directory />\n    </Wrapper>\n  </div>\n);\n\nexport default Portfolio;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from './Component/NavBar';\nimport AboutMe from './Pages/AboutMe';\nimport Contact from './Pages/Contact';\nimport Portfolio from './Pages/Portfolio/portfolio.component';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={AboutMe} />\n          <Route exact path='/contact' component={Contact} />\n          <Route exact path='/portfolio' component={Portfolio} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}