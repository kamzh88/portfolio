{"version":3,"sources":["Images/profile-pic.jpg","Component/NavBar/index.js","Component/Wrapper/index.js","Pages/AboutMe/index.js","Pages/Contact/index.js","Pages/Portfolio/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","Navbar","Brand","Nav","variant","defaultActiveKey","Item","Link","component","href","eventKey","Component","Wrapper","title","this","props","Container","fluid","Row","className","Card","Header","Body","children","styles","image","maxHeight","text","textAlign","fontWeight","AboutMe","state","photo","Image","style","src","Title","Col","sm","md","lg","Contact","Portfolio","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,yC,gVCiC5BC,G,6LAvBX,OAEE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAOC,MAAR,qBACA,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,iBAAiB,QACnC,kBAACF,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAII,KAAL,CAAUC,UAAWD,IAAME,KAAK,KAAhC,aAEF,kBAACN,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAII,KAAL,CAAUG,SAAS,YAAYF,UAAWD,IAAME,KAAK,cAArD,cAEF,kBAACN,EAAA,EAAIG,KAAL,KACE,kBAACH,EAAA,EAAII,KAAL,CAAUG,SAAS,UAAUF,UAAWD,IAAME,KAAK,YAAnD,mB,GAjBOE,c,wBCsBNC,G,uLArBD,IACEC,EAAUC,KAAKC,MAAfF,MACR,OACI,kBAAC,WAAD,KACI,kBAACG,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAKC,UAAU,6BACX,kBAACC,EAAA,EAAD,CAAMD,UAAU,eACZ,kBAACC,EAAA,EAAKC,OAAN,KAAcR,GAGd,kBAACO,EAAA,EAAKE,KAAN,KACKR,KAAKC,MAAMQ,kB,GAbtBZ,c,yCCEhBa,EAAS,CACbC,MAAO,CACLC,UAAW,SAEbC,KAAM,CACJC,UAAW,OACXC,WAAY,MA8CDC,E,2MAxCbC,MAAQ,CACNC,MAAO,I,wEAOP,OAFAlB,KAAKiB,MAAMC,MAAQ,kBAACC,EAAA,EAAD,CAAOC,MAAOV,EAAOC,MAAOU,IAAKV,IAAOR,OAAK,IAG9D,kBAAC,WAAD,KACE,kBAAC,EAAD,CACEJ,MAAO,YAEP,kBAACO,EAAA,EAAKgB,MAAN,MACA,kBAACpB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KACE,kBAACmB,EAAA,EAAD,CAAKC,GAAI,OAAQC,GAAI,EAAGC,GAAI,GACzB1B,KAAKiB,MAAMC,OAEd,kBAACK,EAAA,EAAD,CAAKC,GAAI,OAAQC,GAAI,EAAGC,GAAI,EAAGN,MAAOV,EAAOG,MAC1Cb,KAAKa,KAAL,i7B,GAtBKhB,aCiBP8B,G,uLAjBX,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CACE5B,MAAO,WAEP,kBAACO,EAAA,EAAKgB,MAAN,MACA,kBAACpB,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,a,GAXUP,cCOP+B,G,uLAZX,OAEE,kBAAC,EAAD,CACE7B,MAAO,aAEN,uC,GATeF,cCoBTgC,G,uLAbX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIrC,UAAWsB,IACjC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,WAAWrC,UAAWiC,IACxC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,aAAarC,UAAWkC,U,GATlC/B,cCIEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bf2c33e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic.a87d4194.jpg\";","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\n\nclass NavBar extends Component {\n\n  render() {\n\n    return (\n\n      <Fragment>\n        <Navbar>\n          <Navbar.Brand>Kin Kam Zhao</Navbar.Brand>\n          <Nav variant=\"tabs\" defaultActiveKey=\"Home\">\n            <Nav.Item>\n              <Nav.Link component={Link} href=\"/\">About Me</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"portfolio\" component={Link} href=\"/portfolio\">Portfolio</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link eventKey=\"contact\" component={Link} href=\"/contact\">Contact</Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </Navbar>\n      </Fragment>\n\n    );\n  }\n}\n\nexport default NavBar;","import React, { Component, Fragment } from 'react';\nimport { Button, Card, Container, Row } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\n\nclass Wrapper extends Component {\n\n    render() {\n        const { title } = this.props;\n        return (\n            <Fragment>\n                <Container fluid>\n                    <Row className=\"justify-content-md-center\">\n                        <Card className=\"text-center\">\n                            <Card.Header>{title}\n\n                            </Card.Header>\n                            <Card.Body>\n                                {this.props.children}\n                            </Card.Body>\n                        </Card>\n                    </Row>\n                </Container>\n            </Fragment>\n        )\n    }\n}\n\nexport default Wrapper;","import React, { Component, Fragment } from 'react';\nimport Wrapper from '../../Component/Wrapper';\nimport { Container, Row, Image, Col } from 'react-bootstrap';\nimport { Button, Card } from 'react-bootstrap';\nimport './style.css';\nimport image from '../../Images/profile-pic.jpg'\n\nconst styles = {\n  image: {\n    maxHeight: '15rem',\n  },\n  text: {\n    textAlign: 'left',\n    fontWeight: 700,\n  }\n}\n\nclass AboutMe extends Component {\n\n  state = {\n    photo: ''\n  }\n\n  render() {\n\n    this.state.photo = <Image style={styles.image} src={image} fluid />;\n\n    return (\n      <Fragment>\n        <Wrapper\n          title={'About Me'}\n        >\n          <Card.Title></Card.Title>\n          <Container>\n            <Row>\n              <Col sm={'auto'} md={3} lg={3}>\n                {this.state.photo}\n              </Col>\n              <Col sm={'auto'} md={8} lg={8} style={styles.text}>\n                {this.text = `\n                    My name is Kin Kam Zhao but everyone call me Kam. I am a full Stack Web Developer \n                    leveraging a background in the service industry to create meaningful web applications.  \n                    Graudate with a bachelor degree majoring in finance.  Earned a certificate in \n                    Full Stack Development from Rutgers University, with newly developed skills \n                    in JavaScript, HTML, CSS, node.js, and React.js.  A versatile problem solver.  \n                    In a recent project I created an app that will help managers keep track of their employees\n                    data and help schedule the employees shifts.  Positioned well to provide unique perspectives \n                    on how end-users interact with websites and software platforms by leveraging my background \n                    in the service industry and finance.\n                    `}\n              </Col>\n            </Row>\n          </Container>\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default AboutMe;","import React, { Component, Fragment } from 'react';\nimport Wrapper from '../../Component/Wrapper';\nimport { Container, Row, Image, Col } from 'react-bootstrap';\nimport { Button, Card } from 'react-bootstrap';\nimport './style.css';\n\nconst styles = {\n  text: {\n    textAlign: 'left',\n    fontWeight: 700,\n  }\n}\n\nclass Contact extends Component {\n\n  render() {\n\n    return (\n      <Fragment>\n        <Wrapper\n          title={'Contact'}\n        >\n          <Card.Title></Card.Title>\n          <Container>\n            <Row>\n\n            </Row>\n          </Container>\n        </Wrapper>\n      </Fragment>\n    );\n  }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Wrapper from '../../Component/Wrapper';\nimport './style.css';\n\nclass Portfolio extends Component {\n\n  render() {\n\n    return (\n\n      <Wrapper\n        title={'Portfolio'}\n      >\n        {'portfolio of all the work i did'}\n      </Wrapper>\n\n    );\n  }\n}\n\nexport default Portfolio;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from './Component/NavBar';\nimport AboutMe from './Pages/AboutMe';\nimport Contact from './Pages/Contact';\nimport Portfolio from './Pages/Portfolio';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={AboutMe} />\n          <Route exact path='/contact' component={Contact} />\n          <Route exact path='/portfolio' component={Portfolio} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}